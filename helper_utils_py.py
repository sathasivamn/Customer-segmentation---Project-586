# -*- coding: utf-8 -*-
"""Helper utils.py.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i1efWMpEXlnxX2lSA5yitzdeeZyVKYwS
"""

# utils.py
import joblib
import pandas as pd
import numpy as np
from pathlib import Path

OUT_DIR = Path("/content/cluster_outputs")  # adjust if deploying elsewhere

def load_artifacts(preprocessor_path=None, model_path=None, sample_data_path=None):
    if preprocessor_path is None:
        preprocessor_path = OUT_DIR / "preprocessor.joblib"
    if model_path is None:
        # try to detect best model
        candidates = list(OUT_DIR.glob("best_model_*.joblib"))
        if candidates:
            model_path = candidates[0]
        else:
            raise FileNotFoundError("No best_model_*.joblib found in OUT_DIR")
    preprocessor = joblib.load(preprocessor_path)
    model = joblib.load(model_path)
    sample_df = None
    if sample_data_path is None:
        sample_path = OUT_DIR / "data_with_clusters.csv"
    else:
        sample_path = Path(sample_data_path)
    if sample_path.exists():
        sample_df = pd.read_csv(sample_path)
    return preprocessor, model, sample_df

def predict_cluster_for_input(model, preprocessor, input_df):
    # input_df is a 1-row pandas DataFrame with same raw columns as original df
    X = preprocessor.transform(input_df)
    # check model type
    try:
        labels = model.predict(X)
    except Exception:
        labels = model.fit_predict(X)
    return labels[0]

